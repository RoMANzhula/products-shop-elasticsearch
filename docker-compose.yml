version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    healthcheck:
      test: curl -s http://localhost:9200/_cluster/health | grep -q '"status":"green"' || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - esnet

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENCRYPTIONKEY=aBcDeFgHiJkLmNoPqRsTuVwXyZ123456
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=aBcDeFgHiJkLmNoPqRsTuVwXyZ123456
      - XPACK_REPORTING_ENCRYPTIONKEY=cD2eF3gH4iJ5kL6mN7oP8qR9sT0uV1wX
      - XPACK_SCREENSHOTTING_BROWSER_CHROMIUM_DISABLESANDBOX=true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - esnet

  app:
    build: .
    container_name: springboot-app
    ports:
      - "8080:8080"
    depends_on:
      elasticsearch:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - esnet


  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: techstore_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: YOUR_PASSWORD
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - esnet

volumes:
  pgdata:
  esdata:

networks:
  esnet:
    driver: bridge
